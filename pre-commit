#!/bin/sh
#set TXIncremental=true to use a file list instead of looking the hole repository


TXIncrmental="true"
unameOut="$(uname -s)"

case "${unameOut}" in
    Linux*)                 machine=Linux;;
    Darwin*)                machine=Mac;;
    CYGWIN*|MINGW*|MSYS*)   machine=Windows;;
                       *)   machine="UNKNOWN:${unameOut}"
esac
echo "Found: " ${machine} "Machine"

rootDir=$(git rev-parse --show-toplevel)

pmdRules="$rootDir/.git/hooks/TXCustomRules.xml"

if [ ! -z $TXIncrmental ];
then
    # Get staged only files, and create temporary file with the complete list
    git diff --name-only --cached > GitStagedFiles

    if [ -f ./GitStagedFiles ];
    then
        filesGitStaged="true"
    else
        echo "ERROR: could not create staged files list."
    fi
fi

if [ $machine == "Windows" ]; 
then
    if [ -z $filesGitStaged ];
    then
        pmd.bat -d $rootDir -f text -R "$pmdRules"
    else
        pmd.bat -fileslist ./GitStagedFiles -f text -R "$pmdRules"
    fi
else
    pmd="run.sh pmd"
    if [ -z $filesGitStaged ];
    then
        $pmd -d $rootDir -f text -R "$pmdRules"
    else
        $pmd -filelist ./GitStagedFiles -f text -R "$pmdRules"
    fi
fi

pmdStatus=$?

if [ -f ./GitStagedFiles ];
then
    rm -f GitStagedFiles

    if [ $? -ne 0 ];
    then
        echo "WARNING: Could not delete ./GitStagedFiles temporary file, you should consider removing it manually"
    fi
fi

if [ $pmdStatus -ne 0 ]; then
    echo "ERROR> TX Best Practices Offended in the current Commit, FIX code and retry"
    
    # Redirect stdout to stderr 
    # in order to force complete the commit operation return a 0 status
    exec 1>&2
    exit 1
fi
